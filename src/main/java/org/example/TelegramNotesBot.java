package org.example;

import org.telegram.telegrambots.bots.TelegramLongPollingBot;
import org.telegram.telegrambots.meta.api.methods.send.SendMessage;
import org.telegram.telegrambots.meta.api.objects.Update;
import org.telegram.telegrambots.meta.exceptions.TelegramApiException;

import java.sql.SQLException;
import java.util.List;

public class TelegramNotesBot extends TelegramLongPollingBot {
    private static final String TOKEN = "8049532712:AAFvHLAOsIVMPVdZ7cPuElvXi57UeTnJV50";
    private static final String BOT_USERNAME = "MyNotes";

    @Override
    public void onUpdateReceived(Update update) {
        if (update.hasMessage() && update.getMessage().hasText()) {
            String messageText = update.getMessage().getText();
            String chatId = update.getMessage().getChatId().toString();

            if (messageText.equals("/start")) {
                sendMessage(chatId, "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –∑–∞–º–µ—Ç–æ–∫ ü§ñ.\n–°–æ—Ö—Ä–∞–Ω—é:\n–§–∏–ª—å–º—ã, –∫–æ—Ç–æ—Ä—ã–µ –ø–ª–∞–Ω–∏—Ä—É–µ—à—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å üé¨.\n–ö–Ω–∏–≥–∏, –∫–æ—Ç–æ—Ä—ã–µ –ø–ª–∞–Ω–∏—Ä—É–µ—à—å –ø—Ä–æ—á–∏—Ç–∞—Ç—å üìö. \n–ú–µ—Å—Ç–∞, –∫–æ—Ç–æ—Ä—ã–µ –ø–ª–∞–Ω–∏—Ä—É–µ—à—å –ø–æ—Å–µ—Ç–∏—Ç—å üó∫.\n\n" +
                        "–ö–æ–º–∞–Ω–¥—ã –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏:\n/add_book\n/add_film\n/add_place\n–û–±—â–∏–π –≤–∏–¥ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏:\n–ö–æ–º–∞–Ω–¥–∞ –ü—Ä–æ–±–µ–ª –ó–∞–ø–∏—Å—å\n–ü—Ä–∏–º–µ—Ä:\n\"/add_book –°–∞–º—ã–π –±–æ–≥–∞—Ç—ã–π —á–µ–ª–æ–≤–µ–∫ –≤ –í–∞–≤–∏–ª–æ–Ω–µ\"\n\n" +
                        "–ö–æ–º–∞–Ω–¥—ã –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏:\n/get_books\n/get_films\n/get_places\n\n–ò–∑ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –æ—Ç–æ–±—Ä–∞–∑–∏—Ç—Å—è –≤–µ—Å—å —Å–ø–∏—Å–æ–∫");
            } else {
                try {
                    handleMessage(chatId, messageText);
                } catch (TelegramApiException | SQLException e) {
                    e.printStackTrace();
                }
            }
        }
    }

    private void handleMessage(String chatId, String messageText) throws SQLException, TelegramApiException {
        if (messageText.startsWith("/add_book")) {
            String title = messageText.split(" ", 2)[1];
            Books.addBook(title);
            sendMessage(chatId, "–ö–Ω–∏–≥–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ ‚úÖ");
        } else if (messageText.startsWith("/add_film")) {
            String title = messageText.split(" ", 2)[1];
            Films.addFilm(title);
            sendMessage(chatId, "–§–∏–ª—å–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω ‚úÖ");
        } else if (messageText.startsWith("/add_place")) {
            String name = messageText.split(" ", 2)[1];
            if (name.equals("–≥–ª–∏–Ω–∞")) {
                sendMessage(chatId, "—Ç—ã —á–µ –¥—É—Ä–∞–∫? –Ω–µ –∑–∞–ø–æ–º–Ω—é —ç—Ç–æ –µ–±–∞–Ω—É—Ç–æ–µ –º–µ—Å—Ç–æ");
            } else {
                Places.addPlace(name);
                sendMessage(chatId, "–ú–µ—Å—Ç–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ ‚úÖ");
            }
        } else if (messageText.startsWith("/get_books")) {
            List<Books> books = Books.getAllBooks();
            if (books.isEmpty()) {
                sendMessage(chatId, "–ö–Ω–∏–≥–∏ –µ—â–µ –Ω–µ –±—ã–ª–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ãü§∑‚Äç‚ôÇÔ∏è");
            } else {
                StringBuilder sb = new StringBuilder("Books:\n");
                for (Books book : books) {
                    sb.append(book.getId()).append(" --- ").append(book.getTitle()).append("\n");
                }
                sendMessage(chatId, sb.toString());
            }
        } else if (messageText.startsWith("/get_films")) {
            List<Films> films = Films.getAllFilms();
            if (films.isEmpty()) {
                sendMessage(chatId, "–§–∏–ª—å–º—ã –µ—â–µ –Ω–µ –±—ã–ª–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ãü§∑‚Äç‚ôÇÔ∏è");
            } else {
                StringBuilder sb = new StringBuilder("Films:\n");
                for (Films film : films) {
                    sb.append(film.getId()).append(" --- ").append(film.getTitle()).append("\n");
                }
                sendMessage(chatId, sb.toString());
            }
        } else if (messageText.startsWith("/get_places")) {
            List<Places> places = Places.getAllPlaces();
            if (places.isEmpty()) {
                sendMessage(chatId, "–ú–µ—Å—Ç–∞ –µ—â–µ –Ω–µ –±—ã–ª–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ãü§∑‚Äç‚ôÇÔ∏è");
            } else {
                StringBuilder sb = new StringBuilder("Places:\n");
                for (Places place : places) {
                    sb.append(place.getId()).append(" --- ").append(place.getName()).append("\n");
                }
                sendMessage(chatId, sb.toString());
            }
        } else {
            sendMessage(chatId, "UNKNOWN MESSAGEü§∑‚Äç‚ôÇÔ∏è");
        }
    }

    private void sendMessage(String chatId, String text) {
        SendMessage message = new SendMessage();
        message.setChatId(chatId);
        message.setText(text);
        try {
            execute(message);
        } catch (TelegramApiException e) {
            e.printStackTrace();
        }
    }

    @Override
    public String getBotUsername() {
        return BOT_USERNAME;
    }

    @Override
    public String getBotToken() {
        return TOKEN;
    }
}